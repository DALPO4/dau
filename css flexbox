flexbox는 박스에 지정하는 속성값이 있고 박스 안에 들어가는 아이템에 지정되는 속성값이 있다.
=
flexbox는 container 에 들어가는 속성값과 각각 item에 들어가는 속성값으로 나누어져있음

<먼저 container 레벨에 속성값을 알아보자>
display : flex


flex-direction : row (기본값) (12345    ) 수평이 중심축인지 수직이 중심축인지 정하는 중요한 속성값!  ( 이때는 row니깐  수평축이  중심축이 된다)
flex-direction : row-reverse (     54321)
flex-direction : column  이때는 중심축이 수직축


flex-wrap: nowrap(기본값) 아이템들이 많아져도 아이템들이 한줄에 빼곡히 붙어있음
flex-wrap: wrap 아이템들이 한줄에 가득차면 자동적으로 다음 라인으로 넘어감                                     5678
flex-wrap: wrap-reverse ( 1234 )


flex-flow 한줄에 편하게 적는방법(위에 두가지를 합친것)
ex) flex-flow : column nowrap     1
                                                     2
                                                     3
살짝 border: 1px solid black; 같은 개념으로 보면된다


아이템들을 어떻게 배치하는지는 justify-content , align-content,align-items
 justify-content는 중심축에서 아이템을 어떻게 배치하는지 결정
 justify-content : flex-start(기본값) 중심축이 수평축이면 왼쪽에서오른쪽으로
수직축이 중심축이라면 위에서 아래로
 justify-content: flex-end (아이템의 순서는 유지하되 오른쪽으로 배치,디렉션이 컬럼이면 밑으로 배치 )
ex)   (      12345)  
 justify-content: center
 justify-content: space-around(양옆은 공간이 좁음)
 justify-content:  justify-evenly(똑같은 공간=간격)
 justify-content: between(양옆이 아예 공간 없음)


align-items는 반대축에서 아이템을 어떻게 배치하는지 결정
align-items : baseline
만약 아이템1에 패딩이 있어서 텍스트 위치가 바뀌게됐을 때 align-items : baseline 을 쓰면 베이스라인에 맞춰서 아이템들을 배치시킴
align-content는 당연히  justify-content에 들어간 속성값을 다 쓸 수 있음
align-content : space-between하면 1234                        1234
                                                          5678
                                                         9101112                  5678


                                                                                        9101112


<이제 item에 들어가는 속성값을 알아보자>
order
flex-grow,flex-shrink 컨테이너의 사이즈가 바뀌었을 때 아이템들이 얼마나
늘어나고 줄어드는지 결정
flex-grow 
이걸 쓰지않으면 원래 아이템의 width,height를 이용해서 만든 사이즈를 유지하게 됨 즉 컨테이너가 아무리 커져도 원래의 고유한 크기를 유지할려한다
(컨테이너가 너무 작아지면 어쩔수없이 한줄에 다 꽉 차있어야하니깐 조금씩 작아짐 )
그러나 flex-grow를 쓰면 컨테이너가 늘어나면 컨테이너를 꽉 채울려고
아이템들이 늘어나게됨 
기본값은 flex-grow:0 이기 때문에 아이템들이 그대로 유지
즉 아이템1의 하나의 아이템에만 flex-grow:1 을 하면 컨테이너가 늘어날때 
아이템1의 사이즈만 늘어나고 나머지 아이템들은 고유의 사이즈를 유지하게됨
이제 모든 아이템에다가 flex-grow:1를 하고 다시 아이템1의 속성값에만
flex-grow:2 를 하면 컨테이너가 늘어났을 때 아이템1의 사이즈가 다른 아이템들보다 2배 더 늘어나게됨


flex-shrink 컨테이너가 점점 작아졌을 때 어떻게 행동하는가 지정
flex-shrink:0 (기본값) 


flex-basis 아이템들이 공간을 얼마나 차지해야되는지 세부적으로 나타냄
flex-basis:auto(기본값)  만약 grow,shrink를 쓰지않고
아이템 1에다가 flex-basis:60%를 지정하면 다른 아이들에 비해서 60퍼센트를 차지한다는 말 컨테이너의 크기에 따라 크기가 결정


align-self 는 아이템별로 아이템들을 정렬할 수 있음( 즉 아이템 하나만 센터에 맞추고 싶다, 컨테이너에 지정된것을 벗어나서 아이템 하나만 특별하게 배치하고싶을  때 쓰면됨 )




                                                    
